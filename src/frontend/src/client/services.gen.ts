// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { HealthCheckApiHealthGetResponse, GetDataApiKeysGetResponse, CreateKeyApiKeysPostResponse, PredictApiKnrPredictKnrGetData, PredictApiKnrPredictKnrGetResponse, ListKnrsApiKnrGetResponse, NewKnrApiKnrPostData, NewKnrApiKnrPostResponse, GetKnrApiKnrKnrGetData, GetKnrApiKnrKnrGetResponse, GetLastKnrApiKnrLastProcessedGetResponse, GetListApiDatalakeGetResponse, InsertApiDatalakePostData, InsertApiDatalakePostResponse, GetTableApiDatalakeTableNameGetData, GetTableApiDatalakeTableNameGetResponse, DeleteTableApiDatalakeTableNameDeleteData, DeleteTableApiDatalakeTableNameDeleteResponse, RequestApiModelTrainPostData, RequestApiModelTrainPostResponse, ListModelsApiModelGetResponse, DownloadModelApiModelDownloadModelIdGetData, DownloadModelApiModelDownloadModelIdGetResponse, DeleteModelApiModelModelIdDeleteData, DeleteModelApiModelModelIdDeleteResponse, SelectModelApiModelSelectModelIdPostData, SelectModelApiModelSelectModelIdPostResponse, SelectedModelApiModelSelectedGetResponse, GetCheckupTimeChartApiChartsCheckupTimeGetResponse, GetFreqErrosChartApiChartsFreqErrosGetResponse } from './types.gen';

export class DefaultService {
    /**
     * Health Check
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static healthCheckApiHealthGet(): CancelablePromise<HealthCheckApiHealthGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/health'
        });
    }
    
    /**
     * Get Data
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getDataApiKeysGet(): CancelablePromise<GetDataApiKeysGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/keys/'
        });
    }
    
    /**
     * Create Key
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static createKeyApiKeysPost(): CancelablePromise<CreateKeyApiKeysPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/keys/'
        });
    }
    
    /**
     * Predict
     * @param data The data for the request.
     * @param data.knr
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static predictApiKnrPredictKnrGet(data: PredictApiKnrPredictKnrGetData): CancelablePromise<PredictApiKnrPredictKnrGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/knr/predict/{knr}',
            path: {
                knr: data.knr
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * List Knrs
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static listKnrsApiKnrGet(): CancelablePromise<ListKnrsApiKnrGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/knr/'
        });
    }
    
    /**
     * New Knr
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static newKnrApiKnrPost(data: NewKnrApiKnrPostData): CancelablePromise<NewKnrApiKnrPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/knr/',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Knr
     * @param data The data for the request.
     * @param data.knr
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getKnrApiKnrKnrGet(data: GetKnrApiKnrKnrGetData): CancelablePromise<GetKnrApiKnrKnrGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/knr/{knr}',
            path: {
                knr: data.knr
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Last Knr
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getLastKnrApiKnrLastProcessedGet(): CancelablePromise<GetLastKnrApiKnrLastProcessedGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/knr/last/processed'
        });
    }
    
    /**
     * Get List
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getListApiDatalakeGet(): CancelablePromise<GetListApiDatalakeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/datalake/'
        });
    }
    
    /**
     * Insert
     * @param data The data for the request.
     * @param data.formData
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static insertApiDatalakePost(data: InsertApiDatalakePostData): CancelablePromise<InsertApiDatalakePostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/datalake/',
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Get Table
     * @param data The data for the request.
     * @param data.tableName
     * @param data.page
     * @param data.perPage
     * @param data.knrQuery
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getTableApiDatalakeTableNameGet(data: GetTableApiDatalakeTableNameGetData): CancelablePromise<GetTableApiDatalakeTableNameGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/datalake/{table_name}',
            path: {
                table_name: data.tableName
            },
            query: {
                page: data.page,
                per_page: data.perPage,
                knr_query: data.knrQuery
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Delete Table
     * @param data The data for the request.
     * @param data.tableName
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static deleteTableApiDatalakeTableNameDelete(data: DeleteTableApiDatalakeTableNameDeleteData): CancelablePromise<DeleteTableApiDatalakeTableNameDeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/datalake/{table_name}',
            path: {
                table_name: data.tableName
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Request
     * @param data The data for the request.
     * @param data.formData
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static requestApiModelTrainPost(data: RequestApiModelTrainPostData): CancelablePromise<RequestApiModelTrainPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/model/train',
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * List Models
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static listModelsApiModelGet(): CancelablePromise<ListModelsApiModelGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/model/'
        });
    }
    
    /**
     * Download Model
     * @param data The data for the request.
     * @param data.modelId
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static downloadModelApiModelDownloadModelIdGet(data: DownloadModelApiModelDownloadModelIdGetData): CancelablePromise<DownloadModelApiModelDownloadModelIdGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/model/download/{model_id}',
            path: {
                model_id: data.modelId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Delete Model
     * @param data The data for the request.
     * @param data.modelId
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static deleteModelApiModelModelIdDelete(data: DeleteModelApiModelModelIdDeleteData): CancelablePromise<DeleteModelApiModelModelIdDeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/model/{model_id}',
            path: {
                model_id: data.modelId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Select Model
     * @param data The data for the request.
     * @param data.modelId
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static selectModelApiModelSelectModelIdPost(data: SelectModelApiModelSelectModelIdPostData): CancelablePromise<SelectModelApiModelSelectModelIdPostResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/model/select/{model_id}',
            path: {
                model_id: data.modelId
            },
            errors: {
                422: 'Validation Error'
            }
        });
    }
    
    /**
     * Selected Model
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static selectedModelApiModelSelectedGet(): CancelablePromise<SelectedModelApiModelSelectedGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/model/selected'
        });
    }
    
    /**
     * Get Checkup Time Chart
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getCheckupTimeChartApiChartsCheckupTimeGet(): CancelablePromise<GetCheckupTimeChartApiChartsCheckupTimeGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/charts/checkup_time'
        });
    }
    
    /**
     * Get Freq Erros Chart
     * @returns unknown Successful Response
     * @throws ApiError
     */
    public static getFreqErrosChartApiChartsFreqErrosGet(): CancelablePromise<GetFreqErrosChartApiChartsFreqErrosGetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/charts/freq_erros'
        });
    }
    
}