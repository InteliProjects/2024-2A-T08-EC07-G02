// This file is auto-generated by @hey-api/openapi-ts

export const Body_insert_api_datalake__postSchema = {
    properties: {
        file: {
            type: 'string',
            format: 'binary',
            title: 'File'
        }
    },
    type: 'object',
    required: ['file'],
    title: 'Body_insert_api_datalake__post'
} as const;

export const Body_request_api_model_train_postSchema = {
    properties: {
        failures: {
            type: 'string',
            format: 'binary',
            title: 'Failures'
        },
        results: {
            type: 'string',
            format: 'binary',
            title: 'Results'
        },
        status: {
            type: 'string',
            format: 'binary',
            title: 'Status'
        },
        tags: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Tags',
            default: []
        }
    },
    type: 'object',
    required: ['failures', 'results', 'status'],
    title: 'Body_request_api_model_train_post'
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const KNRSchema = {
    properties: {
        knr: {
            type: 'string',
            title: 'Knr'
        },
        data: {
            type: 'object',
            title: 'Data'
        }
    },
    type: 'object',
    required: ['knr', 'data'],
    title: 'KNR'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;